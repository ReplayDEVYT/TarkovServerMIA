using UnityEngine.Networking;

namespace TestServer
{
    public class MLHelper
    {
        public static ConnectionConfig GetTarkovConfig()
        {
            return new ConnectionConfig
            {
                Channels =
                {
                    new ChannelQOS(QosType.ReliableFragmented),
                    new ChannelQOS(QosType.ReliableFragmented),
                    new ChannelQOS(QosType.ReliableFragmented),
                    new ChannelQOS(QosType.UnreliableSequenced),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate),
                    new ChannelQOS(QosType.StateUpdate)
                }
            };

        }

    }
}
